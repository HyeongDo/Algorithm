#include<iostream>
using namespace std;

int n,m,a[501][501],ans;

int d[19][4][2]={
	//¤Ñ 
	{{0,0},{0,1},{0,2},{0,3}},
	{{0,0},{1,0},{2,0},{3,0}},
	//¤± 
	{{0,0},{0,1},{1,1},{1,0}},
	//L
	{{0,0},{1,0},{2,0},{2,1}},
	{{0,0},{1,0},{2,0},{2,-1}},
	{{0,0},{1,0},{0,1},{2,0}},
	{{0,0},{1,0},{0,-1},{2,0}},
	{{0,0},{0,1},{0,2},{1,2}},
	{{0,0},{0,1},{0,2},{-1,2}},
	{{0,0},{0,1},{0,2},{1,0}},
	{{0,0},{0,1},{0,2},{-1,0}},
	//N
	{{0,0},{1,0},{1,1},{2,1}},
	{{0,1},{1,0},{1,1},{2,0}},
	{{1,0},{1,1},{0,1},{0,2}},
	{{0,0},{0,1},{1,1},{1,2}},
	//¤Ç 
	{{0,0},{0,-1},{0,1},{1,0}},
	{{0,0},{0,1},{1,0},{-1,0}},
	{{0,0},{1,0},{-1,0},{0,-1}},
	{{0,0},{0,-1},{0,1},{-1,0}}
};

void dfs(int x,int y){
	for(int i=0;i<19;i++){
		int res=0;
		for(int j=0;j<4;j++){
			int nx=x+d[i][j][0];
			int ny=y+d[i][j][1];
			if(nx>=0&&nx<n&&ny>=0&&ny<m){
				res+=a[nx][ny];
			}
		}
		ans=max(ans,res);
	}
}

void sol(){
	for(int i=0;i<n;i++){
		for(int j=0;j<m;j++){
			dfs(i,j);
		}
	}
	cout<<ans;
}

int main(void){
	cin>>n>>m;
	for(int i=0;i<n;i++){
		for(int j=0;j<m;j++){
			cin>>a[i][j];
		}
	}
	sol();
	return 0;
}
